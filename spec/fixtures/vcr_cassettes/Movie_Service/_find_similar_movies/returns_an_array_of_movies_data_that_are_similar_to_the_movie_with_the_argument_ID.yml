---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/767/similar?api_key=<API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.9.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 22 May 2024 04:34:41 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=9259
      X-Memc:
      - HIT
      X-Memc-Key:
      - ae6359413f9c86bb0306530e96bc95d3
      X-Memc-Age:
      - '14390'
      X-Memc-Expires:
      - '9259'
      Etag:
      - W/"d04705ab8ab373abcf53c5d242a20808"
      Vary:
      - Accept-Encoding,accept-encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 d12f243c0eac340525d6f4e735c01b64.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 5573s9b43XcR_YeNuijz-PBkFtcNT7eZIqijOR-b6kaxYvnL66zKqA==
      Age:
      - '2059'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 22 May 2024 05:09:00 GMT
recorded_with: VCR 6.2.0
